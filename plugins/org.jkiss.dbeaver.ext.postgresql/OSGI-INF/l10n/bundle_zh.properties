Bundle-Vendor = JKISS
Bundle-Name = DBeaver PostgreSQL Support

# meta #
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canBackward.name=可向后扫描
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canBackward.description=访问方法支持向后扫描吗?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.handler.name=处理程序
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.handler.description=负责提供访问方法信息的处理函数的OID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.type.name=Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.type.description=Currently always i to indicate an index access method; other values may be allowed in future

meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canMultiCol.name=可多字段
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canMultiCol.description=访问方法支持多字段索引吗?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrder.name=可排序
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrder.description=访问方法支持由索引列的值分类的有序扫描吗?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrderByOp.name=可通过操作符排序
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrderByOp.description=访问方法支持由索引字段上的操作符的结果分类的排序扫描吗?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canUnique.name=可唯一
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canUnique.description=访问方法支持唯一索引吗?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.clusterable.name=可集群
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.clusterable.description=这种类型的索引可以集群吗?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.name.description=访问方法的名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.objectId.name=对象 Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.objectId.description=行标识符
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.operatorStrategies.name=策略
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.operatorStrategies.description=访问方法的操作符策略数量。或者如果访问方法没有一组固定的操作符策略则为零。
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.optionalKey.name=可选键
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.optionalKey.description=访问方法支持对第一个索引字段没有任何约束的扫描吗?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.predLocks.name=Pred 锁定
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.predLocks.description=这种类型的索引管理细粒度的谓词锁定吗?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchArray.name=搜索数组
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchArray.description=访问方法支持 ScalarArrayOpExpr 搜索吗?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchNulls.name=搜索空值
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchNulls.description=访问方法支持 IS NULL/NOT NULL 搜索吗?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.storage.name=存储
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.storage.description=索引存储数据类型可以与列数据类型不同吗?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.supportRoutines.name=支持例程
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.supportRoutines.description=该访问方法的支持例程数
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.fullTypeName.name=数据类型
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.fullTypeName.description=Column data type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.defaultValue.name=默认值
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.defaultValue.description=Default value
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.description.name=描述
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.description.description=Comment on column
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.maxLength.name=长度
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.maxLength.description=If the data type specifies the type of a text or bit string, this field specifies its declared maximum length; NULL for all other data types, or if the maximum length is not declared.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.precision.name=精度
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.precision.description=If the data type contains a numeric type, this column contains the accuracy (declared or implicit) of the type for the target column.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.intervalTypeField.name=Interval type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.intervalTypeField.description=Interval type fields. If both fields and scale are specified,\n the fields must include SECOND, since the scale applies only to the seconds.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.required.name=非空
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.required.description=Not Null
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.scale.name=标度
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.scale.description=The scale determines the number of significant digits to the right of the decimal point.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.identity.name=Identity
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.identity.description=Attribute identity (always or by default)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.local.name=Local
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.local.description=This column is defined locally in the relation. Note that a column can be locally defined and inherited simultaneously.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.objectId.description=Attribute unique object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.collation.name=Collation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.collation.description=The defined collation of the column, or zero if the column is not of a collatable data type.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.generatedValue.name=Generated
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.generatedValue.description=Generated value
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.bypassRls.name=Bypass Rls
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.bypassRls.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.canLogin.name=可登录
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.canLogin.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.connLimit.name=连接限制
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.connLimit.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createDatabase.name=创建数据库
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createDatabase.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createRole.name=创建角色
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createRole.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.inherit.name=继承
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.inherit.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.objectId.name=对象 Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.objectId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.password.name=密码
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.password.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.replication.name=复制
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.replication.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.superUser.name=超级用户
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.superUser.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.validUntil.name=有效期至
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.validUntil.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.objectDefinitionText.name=Source
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.owner.name=所有者
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.member.name=角色
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.grantor.name=授予者
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.adminOption.name=管理选项

meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCharset.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCharset.name.description=

meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.name.description=Collation name (unique per namespace and encoding)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.schema.name=模式
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.schema.description=The namespace that contains this collation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.provider.name=Provider
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ownerId.name=Owner
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.encodingId.name=Encoding
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.encodingId.description=Encoding in which the collation is applicable, or -1 if it works for any encoding
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ctype.name=CType
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ctype.description=LC_CTYPE for this collation object
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.collate.name=Collate
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.collate.description=LC_COLLATE for this collation object


meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.objectId.name=ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.align.name=对齐
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.align.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.analyzeFunc.name=分析函数
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.analyzeFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDelimiter.name=数组分隔符
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDelimiter.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDim.name=数组维数
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDim.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayItemType.name=数组项类型
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayItemType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.baseType.name=基础类型
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.baseType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.byValue.name=通过值
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.byValue.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.collationId.name=排序规则 Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.collationId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.defaultValue.name=默认值
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.defaultValue.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.elementType.name=元素类型
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.elementType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.inputFunc.name=输入函数
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.inputFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modInFunc.name=Mod 入函数
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modInFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modOutFunc.name=Mod 出函数
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modOutFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.notNull.name=非空
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.notNull.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.outputFunc.name=输出函数
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.outputFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.owner.name=所有者
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.owner.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.preferred.name=首选的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.preferred.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.receiveFunc.name=接收函数
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.receiveFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.sendFunc.name=发送函数
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.sendFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.storage.name=存储
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.storage.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeCategory.name=类型种类
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeCategory.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeMod.name=类型修饰符
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeMod.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeType.name=类型分类
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.enumValues.name=Enum values
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.enumValues.description=List of possible enumeration values
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.constraint.name=Constraint
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.constraint.description=Constraint (for domain types)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.allowConnect.name=允许连接
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.allowConnect.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.collate.name=排序规则
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.collate.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.connectionLimit.name=连接限制
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.connectionLimit.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.ctype.name=排序规则类型
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.ctype.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.dBA.name=DBA
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.dBA.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultEncoding.name=默认编码
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultEncoding.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultTablespace.name=默认表空间
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultTablespace.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.description.name=Description
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.description.description=Description
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.template.name=模板
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.template.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.name.description=Extension name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.schema.name=模式
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.schema.description=Installed schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.version.name=版本
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.version.description=Installed version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.relocatable.name=Relocatable
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.relocatable.description=Can be relocated
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.tables.name=Tables
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.tables.description=Using tables
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.conditions.name=Conditions
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.conditions.description=ExtensionConditions
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.name.description=Extension name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.version.name=Version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.version.description=Extension version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.installedVersion.name=Installed
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.installedVersion.description=Installed version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.description.name=Description
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.description.description=Comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.name.description=Aggregate function name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.inputTypes.name=Inputs
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.inputTypes.description=Input data types
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.outputType.name=Output type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.outputType.description=Output data type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.objectId.description=Function object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.function.name=Function
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.function.description=Function definition
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.description.name=Comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.description.description=Aggregate function comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.handler.name=处理器
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.handler.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.options.name=选项
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.options.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.owner.name=所有者
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.owner.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.validator.name=验证器
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.validator.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.foreignDataWrapper.name=外部数据封装器
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.foreignDataWrapper.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.options.name=选项
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.options.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.owner.name=所有者
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.owner.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.type.name=类型
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.type.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.version.name=版本
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.version.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.foreignServer.name=Foreign Server
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.name.name=Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.serverOptions.name=Server Options
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.userMappingOptions.name=User Mapping Options
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.manipulation.name=操纵
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.manipulation.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.objectDefinitionText.name=源
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.objectDefinitionText.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.orientation.name=指向
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.orientation.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.timing.name=时序
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.timing.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.accessMethod.name=访问方法
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.accessMethod.description=Access Method
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.checkXMin.name=检查 X 最小
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.checkXMin.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.clustered.name=聚合的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.clustered.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.description.name=描述
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.description.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.predicateExpression.name=Predicate
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.predicateExpression.description=Expression tree for partial index predicate. Null if not a partial index.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexRelSize.name=Rel Size
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexRelSize.description=Disk space used by index
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexNumScans.name=Num Scans
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexNumScans.description=Number of sequential scans done when argument is a table, or number of index scans done when argument is an index
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.exclusion.name=排它
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.exclusion.description=If true, this index supports a constraint-exclusion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.immediate.name=立即的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.immediate.description=If true, the uniqueness check is performed directly when adding data (not applicable if unique is not true)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.primary.name=主要的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.primary.description=This index represents the primary key of the table (in this case, the unique field must also be true)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.ready.name=就绪的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.ready.description=If true, the index is ready to add data. A value of false indicates that the index is ignored for INSERTS/UPDATES.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.unique.name=唯一的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.unique.description=Unique index
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.valid.name=有效的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.valid.description=If true, the index can be used in queries. False means the index is possibly incomplete\: it will, however, be changed by the commands INSERT/UPDATE, but it's safe to use it in queries impossible. If it is unique, the uniqueness property is also not guaranteed.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.tablespace.name=Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.tablespace.description=Index tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.objectDefinitionText.name=DDL
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.objectDefinitionText.description=Index definition
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ascending.name=升序
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ascending.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.nullable.name=可为空的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.nullable.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ordinalPosition.name=顺序位置
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ordinalPosition.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.tableColumn.name=表字段
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.tableColumn.description=Table Column
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.operatorClass.name=操作符类
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.handlerId.name=处理器 Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.handlerId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.inlineHandlerId.name=内联处理器 Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.inlineHandlerId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.objectId.name=对象 Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.objectId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.ownerId.name=所有者 Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.ownerId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.trusted.name=受信任的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.trusted.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.userDefined.name=用户定义的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.userDefined.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.validatorId.name=验证器 Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.validatorId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.value.name=Value
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.value.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.unit.name=Unit
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.unit.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.kind.name=Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.aggregate.name=聚合
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.aggregate.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.body.name=体
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.body.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.estRows.name=估计行
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.estRows.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.execCost.name=执行成本
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.execCost.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.language.name=语言
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.language.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.leakproof.name=防漏的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.leakproof.description=The function has no side effects. No information about its arguments is given except through the return value. Any function that may produce an error, depending on the argument values, is not leakproof.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectDefinitionText.name=源
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectDefinitionText.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.owner.name=所有者
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.owner.description=The owner of the function
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procTransform.name=存储过程转换性
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procTransform.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procVolatile.name=存储过程易变性
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procVolatile.description=The volatile property tells whether the result of a function depends only on its input arguments or is influenced by external factors.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnType.name=返回类型
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnsSet.name=返回集
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnsSet.description=The function returns a set (that is, a set of values of the specified data type)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.securityDefiner.name=安全定义者
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.securityDefiner.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.strict.name=严格的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.strict.description=The function returns NULL if any of the arguments are NULL. In this case, the function will not actually be called at all. Functions that are not "strict" must be prepared to accept NULL values.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.varArrayType.name=Var 数组类型
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.varArrayType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.window.name=窗口
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.window.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.ordinalPosition.name=顺序位置
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.ordinalPosition.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterKind.name=参数种类
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterKind.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterType.name=参数类型
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.defaultValue.name=Default
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.defaultValue.description=Parameter default value
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.name.description=Rule name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.type.name=Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.type.description=Event type that the rule is for\: 1 \= SELECT, 2 \= UPDATE, 3 \= INSERT, 4 \= DELETE
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.enabled.name=Enabled
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.enabled.description=Controls in which session_replication_role modes the rule fires. O \= rule fires in "origin" and "local" modes, D \= rule is disabled, R \= rule fires in "replica" mode, A \= rule fires always.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.instead.name=Instead
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.instead.description=True if the rule is an INSTEAD rule
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.objectDefinitionText.name = Definition
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.dataTypes.name=数据类型
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.dataTypes.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.database.name=数据库
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.database.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.objectId.name=Namespace ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.objectId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.description.name=描述
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.description.description=模式注释
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.owner.name=所有者
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.owner.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.incrementBy.name=步长
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.incrementBy.description=该序列的步长
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.startValue.name=Start value
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.startValue.description=Start value of the sequence
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.lastValue.name=最后值
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.lastValue.description=该序列的最后值
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.maxValue.name=最大值
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.maxValue.description=该序列的最大值
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.minValue.name=最小值
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.minValue.description=该序列的最小值
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cacheValue.name=缓存
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cacheValue.description=该序列的缓存
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cycled.name=循环的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cycled.description=	该序列是否循环
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.hasOids.name=有 Oid
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.hasOids.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.subTables.name=子表
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.subTables.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.superTables.name=超级表
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.superTables.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.tablespace.name=表空间
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.tablespace.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitionKey.name=Partition by
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitionKey.description=Partition table by
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitions.name=Partitions
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.objectId.name=ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.objectId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.owner.name=所有者
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.owner.description=表所有者 (创建者)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.relOptions.name=Extra Options
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.relOptions.description=Access-method-specific options, as "keyword\=value" strings
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.description.name=描述
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.description.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectDefinitionText.name=DDL
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectDefinitionText.description=Constraint definition text
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.description.name=Comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.description.description=Constraint comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferrable.name=Deferrable
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferrable.description=Is the constraint deferrable?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferred.name=Deferred
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferred.description=Is the constraint deferred by default?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraint.source.name=表达式
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraint.source.description=检查约束的表达式
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.attribute.name=属性
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.attribute.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.ordinalPosition.name=顺序位置
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.ordinalPosition.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignOptions.name=外部选项
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignOptions.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignServer.name=外部服务器
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignServer.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.associatedEntity.name=关联实体
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.associatedEntity.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.matchType.name=Match Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.matchType.description=MATCH FULL will not allow one column of a multicolumn foreign key to be null unless all foreign key columns are null.\nMATCH SIMPLE allows some foreign key columns to be null while other parts of the foreign key are not null. 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.deleteRule.name=删除规则
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.deleteRule.description=Deletion rule for foreign key constraint\: CASCADE, SET NULL, SET DEFAULT, RESTRICT, or NO ACTION.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.referencedConstraint.name=参照约束
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.referencedConstraint.description=Referenced Constraint
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.updateRule.name=更新规则
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.updateRule.description=The change rule for a foreign key constraint is CASCADE, SET NULL, SET DEFAULT, RESTRICT, or NO ACTION.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKeyColumn.referencedColumn.name=参照字段
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKeyColumn.referencedColumn.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.associatedEntity.name=关联实体
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.associatedEntity.description=Associated Entity
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.sequenceNum.name=序列数
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.sequenceNum.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCount.name=行数
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCount.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCountEstimate.name=行数估计
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCountEstimate.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.diskSpace.name=磁盘空间
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.diskSpace.description=Total disk space used by the specified table, including all indexes and TOAST data
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.relationSize.name=Rel Size
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.relationSize.description=Disk space used by the fork 'main'
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePartition.partitionExpression.name=Partition Expression
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePartition.partitionExpression.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.options.name=选项
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.options.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.owner.name=所有者
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.owner.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.loc.name=Location
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.loc.description=Location Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTriggerBase.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.description.name=Description
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.enabledState.name=Enabled
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.enabledState.description=Controls in which session_replication_role modes the trigger fires.\nO \= trigger fires in "origin" and "local" modes, D \= trigger is disabled, R \= trigger fires in "replica" mode, A \= trigger fires always.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.actionTiming.name=时序
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.manipulationTypes.name=操控
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.type.name=类型
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.type.description=Trigger type (ROW or STATEMENT)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.columnRefs.name=Column(s)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.columnRefs.description=Table column names, if trigger is column-specific
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectDefinitionText.name=源
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectDefinitionText.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectId.name=对象 Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.table.name=表
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.table.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.whenExpression.name=When 表达式
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.whenExpression.description=触发器的 WHEN 条件的表达式
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.function.name=函数
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.function.description=要调用的函数
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.eventType.name=Event type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.function.name=Function/Procedure
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.enabledState.name=Enabled State
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.enabledState.description=Controls in which session_replication_role modes the event trigger fires.\nO \= trigger fires in "origin" and "local" modes, D \= trigger is disabled, R \= trigger fires in "replica" mode, A \= trigger fires always.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.objectDefinitionText.name=源
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.objectDefinitionText.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.name.name=名称
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.objectDefinitionText.name=源
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.objectDefinitionText.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.tablespace.name=Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.tablespace.description=Materialized view tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.withData.name=Populated
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.withData.description=With [NO] Data
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.cost.name=成本
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.cost.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.entity.name=实体
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.entity.description=Entity
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeType.name=节点类型
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeType.description=Node Type
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.actualRows.name=行
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.totalTime.name=时间
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeCondition.name=条件
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.appName.name=应用名称
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.appName.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.backendStart.name=后台启动
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.backendStart.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.briefQuery.name=短查询
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.briefQuery.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientHost.name=客户端主机
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientHost.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientPort.name=客户端端口
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientPort.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.db.name=数据库
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.db.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.pid.name=PID
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.pid.description=PID
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.queryStart.name=查询启动
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.queryStart.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.state.name=状态
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.state.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.stateChange.name=状态变化
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.stateChange.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.user.name=用户
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.user.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.xactStart.name=Xact 启动
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.xactStart.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_pid.name=等待 PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_pid.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_user.name=等待用户
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_user.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_pid.name=持有 PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_pid.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_user.name=持有用户
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_user.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_statement.name=等待语句
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_statement.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.statement_in.name=持有语句
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.statement_in.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.mode.name=模态
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.mode.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.pid.name=PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.pid.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.detail.name=页/元组
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.detail.description=页 / 元组
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.datname.name=模式
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.datname.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.locktype.name=类型
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.locktype.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.relation.name=关系
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.relation.description=关系
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.tid.name=TID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.tid.description=事务 ID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.granted.name=+
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.granted.description=Granted 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.objectId.name=OID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.default.name=默认的
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.type.name=类型
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.keyType.name=键类型
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.owner.name=所有者
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.namespace.name=模式
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.family.name=族
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.objectId.name=OID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.owner.name=所有者
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.namespace.name=模式

meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.objectId.name = Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.objectType.name = Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.schemaName.name = Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.tableName.name = Table
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.targetObject.name = Object

meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalSchema.externalOptions.name=External options
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.location.name=Location
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.parameters.name=Parameters
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.compressed.name=Compressed
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.outputFormat.name=Output format
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.inputFormat.name=Input format
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.serdeParameters.name=Serde parameters
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.serializationLib.name=Serialization
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.columnEncoding.name=Encoding
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.columnEncoding.description=Encoding of column. The type of compression that is applied to a column of data values as rows are added to a table.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.distKey.name=Dist key
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.distKey.description=True if this column is the distribution key for the table.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.sortKey.name=Sort key
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.sortKey.description=Order of the column in the sort key.\nIf the table uses a compound sort key, then all columns that are part of the sort key have a positive value that indicates the position of the column in the sort key.\nIf the table uses an interleaved sort key, then all each column that is part of the sort key has a value that is alternately positive or negative, where the absolute value indicates the position of the column in the sort key.\nIf 0, the column is not part of a sort key.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.fullTypeName.name=Data type

# data source provider #
datasource.postgresql.description=PostgreSQL JDBC 连接器

tree.accessMethod.node.name=访问方法
tree.accessMethods.node.name=访问方法
tree.administer.node.name=管理员
tree.administer.node.tip=Administer
tree.attribute.node.name=属性
tree.attributes.node.name=属性
tree.collation.node.name=排序规则
tree.collations.node.name=排序规则
tree.column.node.name=字段
tree.columns.node.name=字段
tree.columns.node.tip=Table columns
tree.constraint.columns.node.name=约束字段
tree.constraint.node.name=约束
tree.constraints.node.name=约束
tree.constraints.node.tip=Table unique keys
tree.database.node.name=数据库
tree.databases.node.name=数据库
tree.databases.node.tip=Cluster databases
tree.encoding.node.name=编码
tree.encodings.node.name=编码
tree.extension.node.name=扩展
tree.extensions.node.name=扩展
tree.extensions.node.tip=Database extensions
tree.avalextension.node.name=Available Extension
tree.avalextensions.node.name=Available Extensions
tree.foreignDataWrapper.node.name=外部数据封装器
tree.foreignDataWrappers.node.name=外部数据封装器
tree.foreignServer.node.name=外部服务器
tree.foreignServers.node.name=外部服务器
tree.userMapping.node.name=User Mapping
tree.userMappings.node.name=User Mappings
tree.foreign_key.node.name=外键
tree.foreign_key.node.tip=Table foreign keys
tree.foreign_key_columns.node.name=外键字段
tree.foreign_keys.node.name=外键
tree.index.node.name=索引
tree.index_columns.node.name=索引字段
tree.indexes.node.name=索引
tree.indexes.node.tip=Indexes
tree.storage.node.name=Storage
tree.storage.node.tip=Storage management
tree.information.node.name=系统信息
tree.information.node.tip=Information
tree.language.node.name=语言
tree.languages.node.name=语言
tree.setting.node.name=Setting
tree.settings.node.name=Settings
tree.mview.node.name=物化视图
tree.mviews.node.name=物化视图
tree.mviews.node.tip=Materialized views
tree.package.node.name=包
tree.packages.node.name=包
tree.procedure.node.name=存储过程
tree.procedure_columns.node.name=存储过程字段
tree.procedures.node.name=存储过程
tree.procedures.node.tip=Functions and Procedures
tree.reference.node.name=参照
tree.reference_columns.node.name=参照字段
tree.references.node.name=参照
tree.references.node.tip=Table references
tree.dependencies.node.name=Dependencies
tree.dependencies.node.tip=Table dependencies
tree.dependency.node.name=Dependency
tree.partition.node.name=Partition
tree.partition_columns.node.name=Partition columns
tree.partitions.node.name=Partitions
tree.partitions.node.tip=Table partitions
tree.tablechildren.node.name=Child tables
tree.tablechildren_columns.node.name=Child Tables columns
tree.rules.node.name=Rules
tree.rules.node.tip=Table rules
tree.rule.node.name=Rule
tree.schema.node.name=模式
tree.schemas.node.name=模式
tree.schemas.node.tip=Schemas
tree.sequence.node.name=序列
tree.sequences.node.name=序列
tree.sequences.node.tip=Sequences
tree.sessions.node.name=会话
tree.locks.node.name=锁
tree.locks.node.tip=Server locks manager
tree.table.node.name=表
tree.tables.node.name=表
tree.tables.node.tip=Tables
tree.tablespace.node.name=表空间
tree.tablespaces.node.name=表空间
tree.trigger.node.name=触发器
tree.triggers.node.name=触发器
tree.triggers.node.tip=Table triggers
tree.event.trigger.node.name=Event Trigger
tree.event.triggers.node.name=Event Triggers
tree.event.triggers.node.tip=Event triggers
tree.tview.node.name=视图
tree.tviews.node.name=视图
tree.tviews.node.tip=Views
tree.type.node.name=数据类型
tree.types.node.name=数据类型
tree.types.node.tip=Data types
tree.aggregates.node.name=Aggregate functions
tree.aggregates.node.tip=Aggregate functions
tree.aggregate.node.name=Aggregate function
tree.role.node.name=角色
tree.roles.node.name=角色
tree.roles.node.tip=Roles and users
tree.role.member.node.name=角色
tree.role.members.node.name=成员
tree.role.members.node.tip=Members
tree.role.belong.node.name=角色
tree.role.belongs.node.name=角色
tree.role.belongs.node.tip=Belongs
tree.opClasses.node.name=操作符类
tree.opClass.node.name=操作符类
tree.opFamilies.node.name=操作符族
tree.opFamily.node.name=操作符族

driver.postgresql.description=PostgreSQL 标准驱动
driver.edb.description=EnterpriseDB 标准驱动程序
driver.timescale.description=Timescale JDBC 驱动程序
driver.yugabytedb.description=YugabyteDB JDBC 驱动程序
driver.cockroach.description=CockroachDB JDBC 驱动程序
driver.gcloudpg.description=Google Cloud SQL PostgreSQL JDBC 驱动程序

# data type provider #
provider.data.type.postgresql.name=PostgreSQL 数据类型提供者
provider.data.type.postgresql.description=PostgreSQL 数据类型提供者

# network handler #
handler.ssl.name=SSL
handler.ssl.description=安全套接层

# tool analyze #
tasks.analyze.database.node.name=分析数据视图
tasks.analyze.table.node.name=分析表
tasks.analyze.table.node.description=Analyze table(s)

# tool refresh mat view #
tasks.mview.refresh.node.name = Refresh materialized view
tasks.mview.refresh.node.description = Refresh materialized view(s)
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolMViewRefreshSettings.withData.name = With data
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolMViewRefreshSettings.withData.description = If WITH DATA is specified (or defaults) the backing query is executed to provide the new data, and the materialized view is left in a scannable state.\nIf WITH NO DATA is specified no new data is generated and the materialized view is left in an unscannable state.

meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolWithStatus$ToolStatus.message.name = Message

# tool truncate
tasks.truncate.node.name = 截断表
tasks.truncate.node.description = Truncate table(s)
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.running.name = Run in separate transaction
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.running.description = Run tool in separate transaction. Commit active transaction before tool execution and commit after successful tool execution
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.restarting.name = 重启标识
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.restarting.description = 自动重新启动由截断表的列所有的序列。
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.cascading.name = 级联的
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.cascading.description = 自动截断外键引用任何命名表的所有表,或任何由于级联添加到组的表。
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.only.name = 唯一的
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.only.description = 如果未指定 ONLY, 表及其后代表(如果有的话)会被截断。

# tool vacuum #
tasks.vacuum.table.node.name = 清理表
tasks.vacuum.table.node.description = Vacuum table(s)
tasks.vacuum.database.node.name = 清理数据库
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.full.name = Full
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.full.description = 选择 "完全" 清理, 可以回收更多空间, 但需要更长的时间和专门锁表。\n这种方法也需要额外的磁盘空间, 因为它写表的一个新副本,不释放旧的复制,直到操作完成。\n通常这应该只用于当大量的空间需要从表中回收。
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.freeze.name = Freeze
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.freeze.description = 选择强制 "冻结" 元组. 指定 FREEZE 相当于执行 VACUUM 并且 vacuum_freeze_min_age 和 vacuum_freeze_table_age参数设置为零.\n强制冻结总是在表重写时被执行, 所以当FULL指定时该选项是多余的。
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.analyzed.name = Analyzed
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.analyzed.description = 更新计划器使用的统计来确定最有效的方式来执行一个查询。
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.disableSkipping.name = Disable page skipping
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.disableSkipping.description = 通常, VACUUM 将会跳过基于可见性映射的页.\n所有元组已知被冻结的页面总是可以跳过, 并且那些所有元组对所有事务可见的页面可能被跳过除了执行强制清空的情况。\n此外,除了执行强制清空的时候,一些页面可以跳过是为了避免等待其他会话用完他们。\n该选型禁用所有的页面跳过行为, 并且仅在可见性映射的内容可疑时才会被使用, 这应该只有硬件或软件问题导致数据库损坏时发生。
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.indexCleaning.name = Index cleanup
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.indexCleaning.description = Specifies that VACUUM should attempt to remove index entries pointing to dead tuples.\n This is normally the desired behavior and is the default unless the vacuum_index_cleanup option\n has been set to false\n for the table to be vacuumed. Setting this option to false may be useful when it is necessary\n to make vacuum run as quickly as possible, for example to avoid imminent transaction ID wraparound.\n However, if index cleanup is not performed regularly, performance may suffer, because as the table is modified,\n indexes will accumulate dead tuples and the table itself will\n accumulate dead line pointers that cannot be removed until index cleanup is completed.\n This option has no effect for tables that do not have an index and is ignored if the FULL option is used.\nWorks since PostgreSQL 12.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.truncated.name = Truncate
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.truncated.description = Specifies that VACUUM should attempt to truncate off any empty pages at the end of the table\n and allow the disk space for the truncated pages to be returned to the operating system.\n This is normally the desired behavior and is the default unless the vacuum_truncate option\n has been set to false for the table to be vacuumed. Setting this option to false\n may be useful to avoid ACCESS EXCLUSIVE lock on the table that the truncation requires.\n This option is ignored if the FULL option is used.\nWorks since PostgreSQL 12.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.skipLocked.name = Skip locked
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.skipLocked.description = Specifies that VACUUM should not wait for any conflicting locks to be released when beginning work on a relation\:\n if a relation cannot be locked immediately without waiting, the relation is skipped.\n Note that even with this option, VACUUM may still block when opening the relation's indexes.\n Additionally, VACUUM ANALYZE may still block when acquiring sample rows from partitions, table inheritance children, and some types of foreign tables.\n Also, while VACUUM ordinarily processes all partitions of specified partitioned tables,\n this option will cause VACUUM to skip all partitions if there is a conflicting lock on the partitioned table.\nWorks since PostgreSQL 12.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.description.name = Description