Bundle-Vendor = DBeaver Corp
Bundle-Name = DBeaver資料傳輸

extension-point.org.jkiss.dbeaver.dataTransfer.name = 數據傳輸提供者

dataTransfer.producer.database.name=表
dataTransfer.producer.database.description=數據庫表
dataTransfer.consumer.stream.name=串流文件
dataTransfer.consumer.stream.description=串流平面化文件
dataTransfer.consumer.database.name=數據庫
dataTransfer.consumer.database.description=數據庫表

dataTransfer.producer.stream.name=串流文件
dataTransfer.producer.stream.description=串流平面文件

dataTransfer.producer.stream.processor.csv.name=CSV
dataTransfer.producer.stream.processor.csv.description=從CSV文件導入

dataTransfer.processor.web.name=網頁瀏覽器
dataTransfer.processor.html.name=HTML
dataTransfer.processor.html.description=導出到HTML文件
dataTransfer.processor.html.propertyGroup.general.label = 通用
dataTransfer.processor.html.property.extension.label = 文件擴展
dataTransfer.processor.html.property.images.name=圖片
dataTransfer.processor.html.property.images.description=提取圖片到圖形文件
dataTransfer.processor.html.property.header.name=輸出表頭
dataTransfer.processor.html.property.header.description=將查詢或表名稱輸出為生成的表中的第一行
dataTransfer.processor.html.property.columnHeaders.name = 輸出欄位標題
dataTransfer.processor.html.property.columnHeaders.description = 在產出的表中將列名稱輸出為額外的行

dataTransfer.processor.csv.name=CSV
dataTransfer.processor.csv.description=導出到CSV文件
dataTransfer.processor.csv.propertyGroup.general.label = 通用
dataTransfer.processor.csv.property.delimiter.name=分隔符
dataTransfer.processor.csv.property.delimiter.description = 欄分隔符號。 您可以使用特殊字符 \\ + t,n,r
dataTransfer.processor.csv.property.rowDelimiter.name=行分隔符
dataTransfer.processor.csv.property.rowDelimiter.description = 行分隔符。 默認值為特定於系統的換行分隔符。 您可以使用特殊字符\\ + t，n，r
dataTransfer.processor.csv.property.extension.label = 文件擴展名
dataTransfer.processor.csv.property.header.name=表頭
dataTransfer.processor.csv.property.header.description=CSV 表頭設置
dataTransfer.processor.csv.property.headerFormat.name=Header format
dataTransfer.processor.csv.property.headerFormat.description=Header format
dataTransfer.processor.csv.property.escape.name=字符遮蔽
dataTransfer.processor.csv.property.escape.description = 不良字符遮蔽模型（括號括起 或者用 '\' 字符遮蔽）
dataTransfer.processor.csv.property.quoteChar.name=括起字符
dataTransfer.processor.csv.property.quoteChar.description=用來括起字符串的字符（空白代表不加引號）
dataTransfer.processor.csv.property.quoteAlways.name=總是括起字符 
dataTransfer.processor.csv.property.quoteAlways.description=將所有單元格值加上引號  (不能與“永不括起字符”一起使用)
dataTransfer.processor.csv.property.quoteNever.name=永不括起字符
dataTransfer.processor.csv.property.quoteNever.description=不要把單元格值加上引號。 不能與“總是括起字符”一起使用
dataTransfer.processor.csv.property.nullString.name=NULL字符串
dataTransfer.processor.csv.property.nullString.description=用來替換NULL值的字符串
dataTransfer.processor.csv.property.formatNumbers.name=將數字格式化
dataTransfer.processor.csv.property.formatNumbers.description=使用語系條件來格式化數值

dataTransfer.processor.markdownTable.name=Markdown
dataTransfer.processor.markdownTable.description=導出到Markdown文件
dataTransfer.processor.markdownTable.propertyGroup.general.label = 常規 
dataTransfer.processor.markdownTable.property.extension.label = 文件擴展名
dataTransfer.processor.markdownTable.property.nullString.name=NULL string
dataTransfer.processor.markdownTable.property.nullString.description=將用於代替NULL值的字符串
dataTransfer.processor.markdownTable.property.formatNumbers.name=將數字格式化
dataTransfer.processor.markdownTable.property.formatNumbers.description=使用語系設置格式化數值
dataTransfer.processor.markdownTable.property.showHeaderSeparator.name=顯示標題分隔符
dataTransfer.processor.markdownTable.property.showHeaderSeparator.description=列印標題分隔符（-）。 對於GitHub markdown是必需的。
dataTransfer.processor.markdownTable.property.confluenceFormat.name=Confluence 格式
dataTransfer.processor.markdownTable.property.confluenceFormat.description=使用Confluence格式（標頭的特殊格式，沒有分隔線）

dataTransfer.processor.sql.name=SQL
dataTransfer.processor.sql.description=導出到SQL INSERT陳述
dataTransfer.processor.sql.propertyGroup.general.label = 通用
dataTransfer.processor.sql.propertyGroup.formatting.label = 格式設定
dataTransfer.processor.sql.property.includeAutoGenerated.label=包括自動產生的欄位
dataTransfer.processor.sql.property.includeAutoGenerated.description=在SQL INSERT中加入自動產生的欄位（例如，自動增量）
dataTransfer.processor.sql.property.escape.name=遮蔽字符
dataTransfer.processor.sql.property.escape.description=遮蔽單引號字符的字符
dataTransfer.processor.sql.property.extension.label = 文件擴展
dataTransfer.processor.sql.property.omitSchema.name=省去架構名稱
dataTransfer.processor.sql.property.omitSchema.description=在INSERT陳述省去架構/型錄名稱
dataTransfer.processor.sql.property.rowsInStatement.name=每個陳述的數據行數
dataTransfer.processor.sql.property.rowsInStatement.description=每個INSERT陳述的數據行數
dataTransfer.processor.sql.property.nativeFormat.name=本機日期/時間格式
dataTransfer.processor.sql.property.nativeFormat.description=在INSERT語句中使用本機日期/時間格式
dataTransfer.processor.sql.property.lineBeforeRows.name = 先加上換行符
dataTransfer.processor.sql.property.lineBeforeRows.description = 在每一行輸入之前加上換行符（用於多行插入）
dataTransfer.processor.sql.property.keywordCase.name = 關鍵字大小寫
dataTransfer.processor.sql.property.keywordCase.description = 允許您可以選擇小寫或大寫字型
dataTransfer.processor.sql.property.identifierCase.name = Identifier case
dataTransfer.processor.sql.property.identifierCase.description = You can choose lower or upper keyword case for table and column names
dataTransfer.processor.sql.property.upsertKeyword.name = Upsert關鍵字
dataTransfer.processor.sql.property.upsertKeyword.description = 您可以選擇其他Upsert關鍵字
dataTransfer.processor.sql.property.insertOnConflict.name = InsertOnConflict發生衝突的表示
dataTransfer.processor.sql.property.insertOnConflict.description = InsertOnConflict語句末尾的表達式。 在此字段中輸入所需的值。\n 這是依不同數據庫特定的設置

dataTransfer.processor.xml.name=XML
dataTransfer.processor.xml.description=導出到XML文件
dataTransfer.processor.xml.propertyGroup.general.label = 通用
dataTransfer.processor.xml.property.extension.label = 文件擴展
dataTransfer.processor.xml.property.format.label = 日期/數字 格式
dataTransfer.processor.txt.name=TXT
dataTransfer.processor.txt.description=導出為純文本格式
dataTransfer.processor.txt.propertyGroup.general.label = 常規 
dataTransfer.processor.txt.property.extension.label = 文件擴展名
dataTransfer.processor.txt.property.batchSize.label = 批量大小
dataTransfer.processor.txt.property.minColumnLength.label = 最小列長
dataTransfer.processor.txt.property.maxColumnLength.label = 最大列長
dataTransfer.processor.txt.property.showNulls.label = 顯示空值
dataTransfer.processor.txt.property.delimLeading.label = 顯示文字前的分隔符
dataTransfer.processor.txt.property.delimHeader.label = 顯示標題分隔符
dataTransfer.processor.txt.property.delimTrailing.label = 顯示尾隨後的分隔符
dataTransfer.processor.txt.property.delimBetween.label = 顯示字串中的分隔符
dataTransfer.processor.dbunit.name=DbUnit
dataTransfer.processor.dbunit.description=導出到DbUnit XML文件
dataTransfer.processor.dbunit.propertyGroup.general.label = 常規 
dataTransfer.processor.dbunit.property.extension.label = 文件擴展名
dataTransfer.processor.dbunit.property.uppercase.table.name.label = 強制大寫表名
dataTransfer.processor.dbunit.property.uppercase.column.names.label = 強制使用大寫字母列名稱
dataTransfer.processor.dbunit.property.include.null.values.label=在導出中包含NULL值
dataTransfer.processor.dbunit.property.null.value.string.label=將NULL值替換為
dataTransfer.processor.json.name=JSON
dataTransfer.processor.json.description=導出到JSON文件
dataTransfer.processor.json.propertyGroup.general.label = 通用
dataTransfer.processor.json.property.extension.label = 文件擴展
dataTransfer.processor.json.property.formatDateISO.label = 用 ISO 8601 格式化數據
dataTransfer.processor.json.property.printTableName.label = 打印表名
dataTransfer.processor.source.code.name=源代碼
dataTransfer.processor.source.code.description=導出到源代碼陣列
dataTransfer.processor.source.code.propertyGroup.general.label = 常規 
dataTransfer.processor.source.code.property.extension.label = 文件擴展名
dataTransfer.processor.source.code.property.formatDateISO.label = 依照ISO 8601 格式化日期
dataTransfer.processor.source.code.property.language.name = 語言
dataTransfer.processor.source.code.property.language.description = 編程語言
dataTransfer.processor.source.code.property.quoteChar.name = 引號字符
dataTransfer.processor.source.code.property.quoteChar.description = 用於引用字符串的字符
dataTransfer.processor.source.code.property.rowDelimiter.name = 行分隔符
dataTransfer.processor.source.code.property.rowDelimiter.description = 行分隔符。 默認值為特定於系統的換行分隔符。 n您可以使用特殊字符\\ + t，n，r


dataTransfer.producer.stream.processor.csv.propertyGroup.general.label=Properties
dataTransfer.producer.stream.processor.csv.property.extension.label = 擴展
dataTransfer.producer.stream.processor.csv.property.encoding.label = 編碼方式
dataTransfer.producer.stream.processor.csv.property.delimiter.name = 列定界符
dataTransfer.producer.stream.processor.csv.property.delimiter.description = 列分隔符。 您可以使用特殊字符\\ + t，n，r
dataTransfer.producer.stream.processor.csv.property.header.name = 標題位置
dataTransfer.producer.stream.processor.csv.property.header.description = CSV標頭位置。 標頭用於提取列名
dataTransfer.producer.stream.processor.csv.property.quoteChar.name = 引用字符
dataTransfer.producer.stream.processor.csv.property.quoteChar.description = 用於引用值的字符
dataTransfer.producer.stream.processor.csv.property.escapeChar.name = 遮蔽字符
dataTransfer.producer.stream.processor.csv.property.escapeChar.description = 用於遮蔽特殊字符的字符
dataTransfer.producer.stream.processor.csv.property.emptyStringNull.name = 將空字符串設置為NULL
dataTransfer.producer.stream.processor.csv.property.emptyStringNull.description = 空字符串將轉換為null。 否則，它們將轉換為零長度的字符串
dataTransfer.producer.stream.processor.csv.property.nullString.name = 空值標記
dataTransfer.producer.stream.processor.csv.property.nullString.description = 字符串文字用作NULL值標記。\n 此類字符串在數據導入期間將轉換為NULL
dataTransfer.producer.stream.processor.csv.property.timestampFormat.name = 日期/時間格式
dataTransfer.producer.stream.processor.csv.property.timestampFormat.description = 日期/時間格式模式。 使用它來闡明CSV文件中的日期格式，而不是更改輸出數據。\n 搜索“ java DateTimeFormatter”以獲取格式詳細信息。
dataTransfer.producer.stream.processor.csv.property.timestampZone.name = Timezone ID
dataTransfer.producer.stream.processor.csv.property.timestampZone.description = 時區ID。 默認情況下，使用本地計算機時區。\n 3種指定區域的方式：\n\t -本地區域偏移量（+3，-04：30）\n\t -特定區域偏移量（GMT + 2，UTC + 01：00 ）\n\t -Region based（UTC，ECT，PST等）
dataTransfer.producer.stream.processor.csv.propertyGroup.sampling.label = Sampling
dataTransfer.producer.stream.processor.csv.property.columnTypeSamplesCount.name = 欄位樣本記數
dataTransfer.producer.stream.processor.csv.property.columnTypeSamplesCount.description = 用於猜測導入數據的長度和類型的樣本數量。
dataTransfer.producer.stream.processor.csv.property.columnTypeMinimalLength.name = 最小欄位長度
dataTransfer.producer.stream.processor.csv.property.columnTypeMinimalLength.description = 最小欄位長度
dataTransfer.producer.stream.processor.csv.property.columnTypeUseByteLength.name = Count length in bytes
dataTransfer.producer.stream.processor.csv.property.columnTypeUseByteLength.description = Length must be counted in bytes rather than in code points.\nDepending on the encoding used, a single code point may occupy several bytes.\nSome databases count length in bytes.

dataTransfer.eventProcessor.showInExplorer.label = Show exported file in system explorer
dataTransfer.eventProcessor.showInExplorer.description = Shows exported file in system explorer on finish
dataTransfer.eventProcessor.executeCommand.label = Execute process
dataTransfer.eventProcessor.executeCommand.description = Executes shell command on finish

task.category.name.common = 常見的
task.category.description.common = 常見的資料庫任務
task.name.export = 資料匯出
task.description.export = 數據導出任務
task.name.import = 資料匯入
task.description.import = 數據導入任務
task.name.sql.script = SQL腳本
task.description.sql.script = 執行SQL腳本
